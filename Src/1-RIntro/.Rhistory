Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation, group=StateProvinceCode, fill=CityPopulation),
geom="blank") +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="true", space="free", drop=TRUE) + coord_flip()
IAMNTop10
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation),
geom="blank") +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="free", space="free", drop=TRUE) + coord_flip()
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation),
geom="blank") +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="free", space="free", drop=TRUE) + coord_flip()
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation, group=StateProvinceCode),
) +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="free", space="free", drop=TRUE) + coord_flip()
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation, group=StateProvinceCode),
) +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="free", space="free", drop=FALSE) + coord_flip()
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation, group=StateProvinceCode),
) +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="free", space="free", drop=TRUE) + coord_flip()
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation, group=StateProvinceCode),
) +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="free_x", space="free", drop=TRUE) + coord_flip()
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation, group=StateProvinceCode),
) +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode+CityName ~ ., scales="free_x", space="free", drop=TRUE) + coord_flip()
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation, group=StateProvinceCode),
) +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(. ~ StateProvinceCode, scales="free_x", space="free", drop=TRUE) + coord_flip()
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation, group=StateProvinceCode),
) +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(. ~ StateProvinceCode, scales="free", space="free", drop=TRUE) + coord_flip()
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation, group=StateProvinceCode),
) +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="free", space="free", drop=TRUE) + coord_flip()
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation, group=StateProvinceCode),
) +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="free", space="free") + coord_flip()
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation),
) +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="free", space="free") + coord_flip()
IAMNTop10
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation),
) +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="fixed", space="free") + coord_flip()
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation),
) +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="free", space="free") + xlab("City") + ylab("City Population") + coord_flip()
install.packages("dtplyr")
IAMNTop10$CityName <- as.character(IAMNTop10$CityName)
IAMNTop10$CityName
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation),
) +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="free", space="free") + xlab("City") + ylab("City Population") + coord_flip()
IAMNTop10$StateProvinceCode <- as.character(IAMNTop10$StateProvinceCode)
IAMNTop10$CityName <- as.character(IAMNTop10$CityName)
IAMNTop10$CityPopulation <- as.numeric(IAMNTop10$CityPopulation)
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation),
) +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="free", space="free") + xlab("City") + ylab("City Population")
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation),
) +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="free", space="free") + xlab("City") + ylab("City Population") + coord_flip()
?coord_flip
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityPopulation, y=CityName),
) +
scale_x_discrete(limits = rev(levels(IAMNTop10$CityName))) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="free", space="free") + xlab("City") + ylab("City Population")
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityPopulation, y=CityName),
) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="free", space="free") + xlab("City") + ylab("City Population")
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation),
) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ ., scales="free", space="free") + xlab("City") + ylab("City Population")
Top10Graph <- ggplot(data = IAMNTop10,
aes(x=CityName, y=CityPopulation),
) +
geom_bar(stat = "identity")
Top10Graph + facet_grid(StateProvinceCode ~ .) + xlab("City") + ylab("City Population")
Top10Graph <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "IA"],
aes(x=CityName, y=CityPopulation)) +
ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "NM"],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity")
Top10Graph + xlab("City") + ylab("City Population") + coord_flip()
Top10GraphIA <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "IA"],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
Top10GraphMN <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "NM"],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
multiplot(Top10GraphIA, Top10GraphMN)
library(ggplot2)
Top10GraphIA <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "IA"],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
Top10GraphMN <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "NM"],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
Top10GraphIA <- ggplot(data = IAMNTop10[,IAMNTop10$StateProvinceCode == "IA"],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
IAMNTop10[IAMNTop10$StateProvinceCode == "IA",]
IAMNTop10[IAMNTop10$StateProvinceCode == "IA"]
Top10GraphIA <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "IA",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
Top10GraphMN <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "NM",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
multiplot(Top10GraphIA, Top10GraphMN)
packages.install("gridExtra")
install.packages("gridExtra")
library(gridExtra)
Top10GraphIA <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "IA",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
Top10GraphMN <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "NM",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
Top10GraphCA <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "CA",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
Top10GraphTX <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "TX",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
grid.arrange(Top10GraphIA, Top10GraphNM, Top10GraphCA, Top10GraphTX)
grid.arrange(Top10GraphIA, Top10GraphNM, Top10GraphCA, Top10GraphTX)
grid.arrange(Top10GraphIA, Top10GraphMN, Top10GraphCA, Top10GraphTX)
IAMN <- AllStateCities[AllStateCities$StateProvinceCode == "IA" | AllStateCities$StateProvinceCode == "MN" | AllStateCities$StateProvinceCode == "CA"
| ALLStateCities$StateProvinceCode="TX", interestedCols, with=FALSE]
IAMNOrder <- IAMN[order(-StateProvinceCode,-CityPopulation)]
IAMNTop10 <- rbind(head(IAMNOrder[IAMNOrder$StateProvinceCode == "IA"],10), head(IAMNOrder[IAMNOrder$StateProvinceCode == "MN"], 10),
head(IAMNOrder[IAMNOrder$StateProvinceCode == "CA"],10), head(IAMNOrder[IAMNOrder$StateProvinceCode == "TX"],10))
IAMN <- AllStateCities[AllStateCities$StateProvinceCode == "IA" | AllStateCities$StateProvinceCode == "MN" | AllStateCities$StateProvinceCode == "CA"
| ALLStateCities$StateProvinceCode="TX", interestedCols, with=FALSE]
IAMN <- AllStateCities[AllStateCities$StateProvinceCode == "IA" | AllStateCities$StateProvinceCode == "MN" | AllStateCities$StateProvinceCode == "CA"
| ALLStateCities$StateProvinceCode=="TX", interestedCols, with=FALSE]
IAMN <- AllStateCities[AllStateCities$StateProvinceCode == "IA" | AllStateCities$StateProvinceCode == "MN" | AllStateCities$StateProvinceCode == "CA"
| ALLStateCities$StateProvinceCode=="TX", interestedCols]
IAMN <- AllStateCities[AllStateCities$StateProvinceCode == "IA" | AllStateCities$StateProvinceCode == "MN" | AllStateCities$StateProvinceCode == "CA"
| AllStateCities$StateProvinceCode=="TX", interestedCols]
IAMNOrder <- IAMN[order(-StateProvinceCode,-CityPopulation)]
head(IAMN)
IAMNOrder <- IAMN[order(-StateProvinceCode,-CityPopulation)]
IAMN[is.na(IAMN)] <- 0
IAMNOrder <- IAMN[order(-StateProvinceCode,-CityPopulation)]
IAMN <- data.table(AllStateCities[AllStateCities$StateProvinceCode == "IA" | AllStateCities$StateProvinceCode == "MN" | AllStateCities$StateProvinceCode == "CA"
| AllStateCities$StateProvinceCode=="TX", interestedCols])
library(data.table)
IAMN <- data.table(AllStateCities[AllStateCities$StateProvinceCode == "IA" | AllStateCities$StateProvinceCode == "MN" | AllStateCities$StateProvinceCode == "CA"
| AllStateCities$StateProvinceCode=="TX", interestedCols])
IAMN[is.na(IAMN)] <- 0
IAMNOrder <- IAMN[order(-StateProvinceCode,-CityPopulation)]
IAMN
IAMN <- data.table(AllStateCities[AllStateCities$StateProvinceCode == "IA" | AllStateCities$StateProvinceCode == "MN" | AllStateCities$StateProvinceCode == "CA"
| AllStateCities$StateProvinceCode=="TX", interestedCols], with = FALSE)
IAMN[is.na(IAMN)] <- 0
IAMNOrder <- IAMN[order(-StateProvinceCode,-CityPopulation)]
IAMN <- data.table(AllStateCities[AllStateCities$StateProvinceCode == "IA" | AllStateCities$StateProvinceCode == "MN" | AllStateCities$StateProvinceCode == "CA"
| AllStateCities$StateProvinceCode=="TX", interestedCols, with = FALSE])
IAMN[is.na(IAMN)] <- 0
IAMNOrder <- IAMN[order(-StateProvinceCode,-CityPopulation)]
IAMNTop10 <- rbind(head(IAMNOrder[IAMNOrder$StateProvinceCode == "IA"],10), head(IAMNOrder[IAMNOrder$StateProvinceCode == "MN"], 10),
head(IAMNOrder[IAMNOrder$StateProvinceCode == "CA"],10), head(IAMNOrder[IAMNOrder$StateProvinceCode == "TX"],10))
IAMNTop10$StateProvinceCode <- as.character(IAMNTop10$StateProvinceCode)
IAMNTop10$CityName <- as.character(IAMNTop10$CityName)
IAMNTop10$CityPopulation <- as.numeric(IAMNTop10$CityPopulation)
Top10GraphIA <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "IA",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
Top10GraphMN <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "NM",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
Top10GraphCA <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "CA",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
Top10GraphTX <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "TX",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
grid.arrange(Top10GraphIA, Top10GraphMN, Top10GraphCA, Top10GraphTX)
IAMNTop10
Top10GraphMN <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "NM",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
print(Top10GraphMN)
IAMNTop10[IAMNTop10$StateProvinceCode == "NM",]
IAMNTop10[IAMNTop10$StateProvinceCode == "MN",]
Top10GraphIA <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "IA",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
Top10GraphMN <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "MN",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
Top10GraphCA <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "CA",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
Top10GraphTX <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "TX",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip()
library(gridExtra)
grid.arrange(Top10GraphIA, Top10GraphMN, Top10GraphCA, Top10GraphTX)
install.packages("dtplyr")
options(scipen=999)
grid.arrange(Top10GraphIA, Top10GraphMN, Top10GraphCA, Top10GraphTX)
gridTheme <- gridExtra::ttheme_default(core = list(padding=unit(c(1, 1), "mm")))
grid.arrange(Top10GraphIA, Top10GraphMN, Top10GraphCA, Top10GraphTX, theme=gridTheme)
?tableGrob
?grid.arrange
grid.arrange(Top10GraphIA, Top10GraphMN, Top10GraphCA, Top10GraphTX, padding=unit(1,"line"))
library("plyr")
library("ggplot2")
library("RODBC")
library(gridExtra)
library(data.table)
library(dtplyr)
library(plyr)
library(ggplot2)
library(RODBC)
library(gridExtra)
library(data.table)
library(dtplyr)
library(dplyr)
connectionString <- "driver=freetds;DSN=SqlServer;Database=WorldWideImporters;UID=sa;Pwd=pAssw04d"
dbhandle <- odbcDriverConnect(connectionString)
allData <- sqlQuery(dbhandle, 'select c.CityName, c.LatestRecordedPopulation as CityPopulation,
s.StateProvinceCode, s.StateProvinceName, s.LatestRecordedPopulation as StatePopulation
from Application.Cities c left join Application.StateProvinces s ON c.StateProvinceId = s.StateProvinceID')
close(dbhandle)
View(allData)
View(allData)
AllStateCities <- data.table(allData)
interestedCols <- c("StateProvinceCode", "CityPopulation", "CityName")
IAMN <- data.table(AllStateCities[AllStateCities$StateProvinceCode == "IA" | AllStateCities$StateProvinceCode == "MN" | AllStateCities$StateProvinceCode == "CA"
| AllStateCities$StateProvinceCode=="TX", interestedCols, with = FALSE])
IAMN[is.na(IAMN)] <- 0
IAMNOrder <- IAMN[order(-StateProvinceCode,-CityPopulation)]
IAMNTop10 <- rbind(head(IAMNOrder[IAMNOrder$StateProvinceCode == "IA"],10), head(IAMNOrder[IAMNOrder$StateProvinceCode == "MN"], 10),
head(IAMNOrder[IAMNOrder$StateProvinceCode == "CA"],10), head(IAMNOrder[IAMNOrder$StateProvinceCode == "TX"],10))
# top_n -- attach weight function at the end may make all this simpler
# dtplyr
# dplyr - newer than plyr (Keeps everything in dataframe, less conversion)
IAMNTop10$StateProvinceCode <- as.character(IAMNTop10$StateProvinceCode)
IAMNTop10$CityName <- as.character(IAMNTop10$CityName)
IAMNTop10$CityPopulation <- as.numeric(IAMNTop10$CityPopulation)
Top10GraphIA <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "IA",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip() +
ggtitle("Iowa")
Top10GraphMN <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "MN",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip() +
ggtitle("Minneapolis")
Top10GraphCA <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "CA",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip() +
ggplot("California")
Top10GraphTX <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "TX",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip() +
ggplot("Texas")
grid.arrange(Top10GraphIA, Top10GraphMN, Top10GraphCA, Top10GraphTX, padding=unit(1,"line"))
# Add a table
tableGrob()
StateCounts <- unique(data.frame(State=csvData$StateProvinceName, Population=csvData$StatePopulation))
StateGraph <- qplot(data = StateCounts, x=State, y=Population, fill=Population, geom="blank"
) + coord_flip() + geom_bar(stat = "identity")
plot(StateGraph)
options(scipen=999)
StateCounts
StateGraph <- qplot(data = SortedStateCounts, x=reorder(State, -Population), y=Population, fill=Population, geom="blank"
) + coord_flip() + geom_bar(stat = "identity")
plot(StateGraph)
AllStateCities <- data.table(allData)
interestedCols <- c("StateProvinceCode", "CityPopulation", "CityName")
IAMN <- data.table(AllStateCities[AllStateCities$StateProvinceCode == "IA" | AllStateCities$StateProvinceCode == "MN" | AllStateCities$StateProvinceCode == "CA"
| AllStateCities$StateProvinceCode=="TX", interestedCols, with = FALSE])
IAMN[is.na(IAMN)] <- 0
IAMNOrder <- IAMN[order(-StateProvinceCode,-CityPopulation)]
IAMNTop10 <- rbind(head(IAMNOrder[IAMNOrder$StateProvinceCode == "IA"],10), head(IAMNOrder[IAMNOrder$StateProvinceCode == "MN"], 10),
head(IAMNOrder[IAMNOrder$StateProvinceCode == "CA"],10), head(IAMNOrder[IAMNOrder$StateProvinceCode == "TX"],10))
View(IAMNTop10)
?data.table
IAMNTop10
IAMNTop10$StateProvinceCode
IAMNTop10$StateProvinceCode <- as.character(IAMNTop10$StateProvinceCode)
IAMNTop10$CityName <- as.character(IAMNTop10$CityName)
IAMNTop10$CityPopulation <- as.numeric(IAMNTop10$CityPopulation)
IAMNTop10$StateProvinceCode
unclass(IAMNTop10$StateProvinceCode)
library(plyr)
library(ggplot2)
library(RODBC)
library(gridExtra)
library(data.table)
library(dtplyr)
library(dplyr)
library(plyr)
library(ggplot2)
library(RODBC)
library(gridExtra)
library(data.table)
library(dtplyr)
library(dplyr)
connectionString <- "driver=freetds;DSN=SqlServer;Database=WorldWideImporters;UID=sa;Pwd=pAssw04d"
dbhandle <- odbcDriverConnect(connectionString)
allData <- sqlQuery(dbhandle, 'select c.CityName, c.LatestRecordedPopulation as CityPopulation,
s.StateProvinceCode, s.StateProvinceName, s.LatestRecordedPopulation as StatePopulation
from Application.Cities c left join Application.StateProvinces s ON c.StateProvinceId = s.StateProvinceID')
close(dbhandle)
View(allData)
StateCounts <- unique(data.frame(State=csvData$StateProvinceName, Population=csvData$StatePopulation))
StateGraph <- qplot(data = StateCounts, x=State, y=Population, fill=Population, geom="blank"
) + coord_flip() + geom_bar(stat = "identity")
plot(StateGraph)
csvData <- read.table("/home/rstudio/src/Data/citylocs.csv", header=TRUE, sep=",", row.names=1)
StateCounts <- unique(data.frame(State=csvData$StateProvinceName, Population=csvData$StatePopulation))
StateGraph <- qplot(data = StateCounts, x=State, y=Population, fill=Population, geom="blank"
) + coord_flip() + geom_bar(stat = "identity")
plot(StateGraph)
options(scipen=999)
SortedStateCounts <- StateCounts[order(StateCounts$Population),]
attach(StateCounts)
SortedStateCounts <- StateCounts[order(Population)]
detach(StateCounts)
# Graph sorted by Population
StateGraph <- qplot(data = SortedStateCounts, x=reorder(State, -Population), y=Population, fill=Population, geom="blank"
) + coord_flip() + geom_bar(stat = "identity")
plot(StateGraph)
AllStateCities <- data.table(allData)
interestedCols <- c("StateProvinceCode", "CityPopulation", "CityName")
IAMN <- data.table(AllStateCities[AllStateCities$StateProvinceCode == "IA" | AllStateCities$StateProvinceCode == "MN" | AllStateCities$StateProvinceCode == "CA"
| AllStateCities$StateProvinceCode=="TX", interestedCols, with = FALSE])
IAMN[is.na(IAMN)] <- 0
IAMNOrder <- IAMN[order(-StateProvinceCode,-CityPopulation)]
IAMNTop10 <- rbind(head(IAMNOrder[IAMNOrder$StateProvinceCode == "IA"],10), head(IAMNOrder[IAMNOrder$StateProvinceCode == "MN"], 10),
head(IAMNOrder[IAMNOrder$StateProvinceCode == "CA"],10), head(IAMNOrder[IAMNOrder$StateProvinceCode == "TX"],10))
# top_n -- attach weight function at the end may make all this simpler
# dtplyr
# dplyr - newer than plyr (Keeps everything in dataframe, less conversion)
IAMNTop10$StateProvinceCode <- as.character(IAMNTop10$StateProvinceCode)
IAMNTop10$CityName <- as.character(IAMNTop10$CityName)
IAMNTop10$CityPopulation <- as.numeric(IAMNTop10$CityPopulation)
Top10GraphIA <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "IA",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip() +
ggtitle("Iowa")
Top10GraphMN <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "MN",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip() +
ggtitle("Minneapolis")
Top10GraphCA <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "CA",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip() +
ggplot("California")
Top10GraphTX <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "TX",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip() +
ggplot("Texas")
grid.arrange(Top10GraphIA, Top10GraphMN, Top10GraphCA, Top10GraphTX, padding=unit(1,"line"))
# Summary Information
summary(csvData)
# Basic Graph
StateCounts <- unique(data.frame(State=csvData$StateProvinceName, Population=csvData$StatePopulation))
StateGraph <- qplot(data = StateCounts, x=State, y=Population, fill=Population, geom="blank"
) + coord_flip() + geom_bar(stat = "identity")
plot(StateGraph)
# Remove Scientific Notation
options(scipen=999)
# Sort the data set - two ways
SortedStateCounts <- StateCounts[order(StateCounts$Population),]
attach(StateCounts)
SortedStateCounts <- StateCounts[order(Population)]
detach(StateCounts)
# Graph sorted by Population
StateGraph <- qplot(data = SortedStateCounts, x=reorder(State, -Population), y=Population, fill=Population, geom="blank"
) + coord_flip() + geom_bar(stat = "identity")
plot(StateGraph)
# Subset of state population
stateGraphSubset <- SortedStateCounts %>%
filter(State %in% c('Wyoming', 'Vermont', 'District of Columbia'))
stateSubsetGraph <- qplot(data = stateGraphSubset, x=reorder(State, -Population), y=Population, fill=Population, geom="blank"
) + coord_flip() + geom_bar(stat = "identity")
plot(stateSubsetGraph)
# Small introduction to DataTable
library(data.table)
StateCountsTable <- data.table(StateCounts)
StateCountsTable <- StateCountsTable[order(-rank(State))]
### Fill in more examples here ###
# Order it by State (not in reverse order)
StateGraph <- qplot(data = StateCountsTable, x=State, y=Population, fill=Population, geom="blank"
) + coord_flip() + scale_x_discrete(limits = rev(levels(StateCountsTable$State))) + geom_bar(stat = "identity")
plot(StateGraph)
# A few States
AllStateCities <- data.table(allData)
interestedCols <- c("StateProvinceCode", "CityPopulation", "CityName")
IAMN <- data.table(AllStateCities[AllStateCities$StateProvinceCode == "IA" | AllStateCities$StateProvinceCode == "MN" | AllStateCities$StateProvinceCode == "CA"
| AllStateCities$StateProvinceCode=="TX", interestedCols, with = FALSE])
IAMN[is.na(IAMN)] <- 0
IAMNOrder <- IAMN[order(-StateProvinceCode,-CityPopulation)]
IAMNTop10 <- rbind(head(IAMNOrder[IAMNOrder$StateProvinceCode == "IA"],10), head(IAMNOrder[IAMNOrder$StateProvinceCode == "MN"], 10),
head(IAMNOrder[IAMNOrder$StateProvinceCode == "CA"],10), head(IAMNOrder[IAMNOrder$StateProvinceCode == "TX"],10))
# top_n -- attach weight function at the end may make all this simpler
# dtplyr
# dplyr - newer than plyr (Keeps everything in dataframe, less conversion)
IAMNTop10$StateProvinceCode <- as.character(IAMNTop10$StateProvinceCode)
IAMNTop10$CityName <- as.character(IAMNTop10$CityName)
IAMNTop10$CityPopulation <- as.numeric(IAMNTop10$CityPopulation)
Top10GraphIA <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "IA",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip() +
ggtitle("Iowa")
Top10GraphMN <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "MN",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip() +
ggtitle("Minneapolis")
Top10GraphCA <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "CA",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip() +
ggplot("California")
Top10GraphTX <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "TX",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip() +
ggplot("Texas")
grid.arrange(Top10GraphIA, Top10GraphMN, Top10GraphCA, Top10GraphTX, padding=unit(1,"line"))
Top10GraphCA <- ggplot(data = IAMNTop10[IAMNTop10$StateProvinceCode == "CA",],
aes(x=CityName, y=CityPopulation)) +
geom_bar(stat = "identity") + xlab("City") + ylab("City Population") + coord_flip() +
ggplot("California")
library(dplyr)
library(dtplyr)
install.packages(dplyr)
install.packages("dplyr")
library(plyr)
library(ggplot2)
library(RODBC)
library(gridExtra)
library(data.table)
library(dtplyr)
library(dplyr)
install.packages("gridExtra")
install.packages("gridExtra")
install.packages("gridExtra")
install.packages("plyr")
install.packages("ggplot2")
install.packages("gridExtra")
install.packages("dtplyr")
install.packages("dplyr")
install.packages("plyr")
install.packages("ggplot2")
install.packages("gridExtra")
install.packages("dtplyr")
install.packages("dplyr")
install.packages("RODBC")
