sqlCompute <- RxInSqlServer(connectionString = "Data Source=.;Initial Catalog=AdventureWorks2016;User Id=rTest;Password=test")
sqlCompute <- RxInSqlServer(connectionString = "Data Source=.;Initial Catalog=AdventureWorks2016;UID=rTest;Password=test")
sqlCompute
rxSetComputeContext(sqlCompute)
rxLinMod()
connectionString <- "Data Source=.;Initial Catalog=AdventureWorks2016;UID=rTest;Password=test"
connectionString
sqlCompute <- RxInSqlServer(connectionString = connectionString)
rxSetComputeContext(sqlCompute)
connectionString <- "Data Source=.;Initial Catalog=AdventureWorks2016;UID=rTest;Password=test"
data <- RxSqlServerData(table="Person.Person")
connectionStr <- "Data Source=.;Initial Catalog=AdventureWorks2016;UID=rTest;Password=test"
data <- RxSqlServerData(table="Person.Person", connectionString = connectionStr)
instance_name <- ".";
database_name <- "AdventureWorks2016";
myConnString <- paste("Driver= SQL Server;Server=",instance_name, ";Database=",database_name,";Trusted_Connection=true;",sep="");
# Set other variables used to define the compute context
sqlWait = TRUE;
sqlConsoleOutput = TRUE;
# Create the compute context
cc <-RxInSqlServer
cc
dataContext <- RxSqlServerData(table="Person.Person", connectionString = connectionStr)
data <- rxReadNext(dataContext)
data
dataContext
connectionStr <- "Data Source=.;Initial Catalog=AdventureWorks2016;UID=rTest;Password=test"
# Read from SQL Server tables
dataContext <- RxSqlServerData(table="Person.Person", connectionString = connectionStr)
data <- rxReadNext(dataContext)
dataContext
dataContext <- RxSqlServerData(table="Person.Person", connectionString = connectionStr, rowsPerRead = 20000)
rxGetVarInfo(dataContext)
dataContext
rxGetVarInfo(data=dataContext)
connectionStr <- "Server=.;Initial Catalog=AdventureWorks2016;UID=rTest;Password=test"
# Read from SQL Server tables
dataContext <- RxSqlServerData(table="Person.Person", connectionString = connectionStr, rowsPerRead = 20000)
rxGetVarInfo(data=dataContext)
connectionStr <- "Server=localhost;Initial Catalog=AdventureWorks2016;UID=rTest;Password=test"
# Read from SQL Server tables
dataContext <- RxSqlServerData(table="Person.Person", connectionString = connectionStr, rowsPerRead = 20000)
rxGetVarInfo(data=dataContext)
rxOpen(dataContext)
connectionStr <- "Server=localhost;Initial Catalog=AdventureWorks2016;UID=rUser;Password=test"
dataContext <- RxSqlServerData(table="Person.Person", connectionString = connectionStr, rowsPerRead = 20000)
rxOpen(dataContext)
instance_name <- ".";
database_name <- "AdventureWorks2016";
myConnString <- paste("Driver= SQL Server;Server=",instance_name, ";Database=",database_name,";Trusted_Connection=true;",sep="");
# Set other variables used to define the compute context
sqlWait = TRUE;
sqlConsoleOutput = TRUE;
# Read from a table
dataContext <- RxSqlServerData(table="Person.Person", connectionString = connectionStr, rowsPerRead = 20000)
data <- rxReadNext(dataContext)
instance_name <- ".";
database_name <- "AdventureWorks2016";
myConnString <- paste("Driver= SQL Server;Server=",instance_name, ";Database=",database_name,";Trusted_Connection=true;",sep="");
# Set other variables used to define the compute context
sqlWait = TRUE;
sqlConsoleOutput = TRUE;
# Read from a table
dataContext <- RxSqlServerData(table="Person.Person", connectionString = connectionStr, rowsPerRead = 20000)
data <- rxReadNext(dataContext)
# Use trusted connections instead
instance_name <- ".";
database_name <- "AdventureWorks2016";
myConnString <- paste("Driver= SQL Server;Server=",instance_name, ";Database=",database_name,";Trusted_Connection=true;",sep="");
# Set other variables used to define the compute context
sqlWait = TRUE;
sqlConsoleOutput = TRUE;
# Read from a table
dataContext <- RxSqlServerData(table="Person.Person", connectionString = connectionStr, rowsPerRead = 20000)
rxOpen(dataContext)
rxOpen(dataContext)
dataContext <- RxSqlServerData(table="Person.Person", connectionString = myConnString, rowsPerRead = 20000)
rxOpen(dataContext)
myConnString
connectionStr <- "Server=localhost;Initial Catalog=AdventureWorks2016;UID=rUser;Password=test"
# Read from SQL Server tables
dataContext <- RxSqlServerData(table="Person.Person", connectionString = connectionStr, rowsPerRead = 20000)
rxOpen(dataContext)
rxOpen(dataContext)
connectionStr <- "Server=localhost;Initial Catalog=AdventureWorks2016;UID=rUser;Pwd=test"
dataContext <- RxSqlServerData(table="Person.Person", connectionString = connectionStr, rowsPerRead = 20000)
rxOpen(dataContext)
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = connectionStr, rowsPerRead = 20000)
rxOpen(dataContext)
data <- rxReadnext(dataContext)
rxReadNext(dataContext)
rxReadNext(dataContext)
rxClose(dataConext
)
rxClose(dataContext)
rxOpen(dataContext)
data <- rxReadNext(dataContext)
rxClose(dataContext)
data
data$StateProvinceName
dataContextBroken <- RxSqlServerData(table="Person.Person", connectionString = connectionStr, rowsPerRead = 20000)
rxOpen(dataContextBroken)
data <- rxReadNext(dataContextBroken)
rxClose(dataContextBroken)
dataContextBroken <- RxSqlServerData(table="Person.Person", connectionString = connectionStr, rowsPerRead = 20000)
rxOpen(dataContextBroken)
instance_name <- ".";
database_name <- "AdventureWorks2016";
myConnString <- paste("Driver= SQL Server;Server=",instance_name, ";Database=",database_name,";Trusted_Connection=true;",sep="");
# Set other variables used to define the compute context
sqlWait = TRUE;
sqlConsoleOutput = TRUE;
instance_name <- ".";
database_name <- "AdventureWorks2016";
myConnString <- paste("Driver= SQL Server;Server=",instance_name, ";Database=",database_name,";Trusted_Connection=true;",sep="");
# Set other variables used to define the compute context
sqlWait = TRUE;
sqlConsoleOutput = TRUE;
dataContext <- RxSqlServerData(table="Person.Person", connectionString = myConnString, rowsPerRead = 20000)
rxOpen(dataConext)
rxOpen(dataContext)
myConnString <- paste("Server=",instance_name, ";Database=",database_name,";Trusted_Connection=true;",sep="");
dataContext <- RxSqlServerData(table="Person.Person", connectionString = myConnString, rowsPerRead = 20000)
rxOpen(dataContext)
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = myConnString, rowsPerRead = 20000)
rxOpen(dataContext)
data <- rxReadNext(dataContext)
rxClose(dataContext)
View(data)
apply(data, 1, function(x) f(x$FirstName + " " + x$LastName))
apply(data, 1, function(x) (x$FirstName + " " + x$LastName))
require(plyr)
install.packages("plyr")
require(plyr)
apply(data, 1, function(x) f(x$FirstName + " " + x$LastName))
adply(data, 1, function(x) f(x$FirstName + " " + x$LastName))
adply(data, 1, function(x) { paste(x$FirstName, x.LastName, sep=' ') }
)
adply(data, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })
adply(data, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1
summary(data)
writer <- RxSqlServerData(connectionString = connectionStr, table=SimpleUserList, rowsPerRead=20000)
rxDataStep(inData=names, writer, overwrite=TRUE)
writer
writer <- RxSqlServerData(connectionString = connectionStr, table="SimpleUserList", rowsPerRead=20000)
rxDataStep(inData=names, writer, overwrite=TRUE)
rxDataStep
rxDataStep(inData=names, writer, overwrite=TRUE)
names <- adply(data, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1
names
rxDataStep(inData=names, writer, overwrite=TRUE)
sqlCompute <- RxInSqlServer(connectionString = connectionStr, wait = true, consoleOutput = true,
traceEnabled = true, traceLevel = 7)
rxSetComputeContext(sqlCompute)
summaryOfVSales <- rxSummary(data = dataContext)
sqlCompute <- RxInSqlServer(connectionString = connectionStr, wait = true, consoleOutput = true,
traceEnabled = true, traceLevel = 7)
sqlCompute <- RxInSqlServer(connectionString = connectionStr, wait = TRUE , consoleOutput = true,
traceEnabled = true, traceLevel = 7)
sqlCompute <- RxInSqlServer(connectionString = connectionStr, wait = TRUE , consoleOutput = TRUE,
traceEnabled = TRUE, traceLevel = 7)
rxSetComputeContext(sqlCompute)
summaryOfVSales <- rxSummary(data = dataContext)
summaryOfVSales <- rxSummary(data = dataContext)
summaryOfVSales <- rxSummary(formula=~.,data = dataContext)
summaryOfVSales
rxSetComputeContext("local")
summaryOfVSalesLocal <- rxSummary(formula=~., data=data)
summaryOfVSalesLocal
connectionStr <- "Server=localhost;Initial Catalog=AdventureWorks2016;UID=rUser;Pwd=test"
# Read from SQL Server tables
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = connectionStr, rowsPerRead = 20000)
connectionStr <- "Server=localhost;Initial Catalog=AdventureWorks2016;UID=rUser;Pwd=test"
# Read from SQL Server tables
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = connectionStr, rowsPerRead = 20000)
connectionStr <- "Server=localhost;Initial Catalog=AdventureWorks2016;UID=rUser;Pwd=test"
# Read from SQL Server tables
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = connectionStr, rowsPerRead = 20000)
dataContext
data
connectionStr <- "Server=localhost;Initial Catalog=AdventureWorks2016;UID=rUser;Pwd=test"
# Read from SQL Server tables
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = connectionStr, rowsPerRead = 20000)
dataOut
connectionStr <- "Server=localhost;Initial Catalog=AdventureWorks2016;UID=rUser;Pwd=test"
# Read from SQL Server tables
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = connectionStr, rowsPerRead = 20000)
# Open the source, read into data.
rxOpen(dataContext)
dataOut <- rxReadNext(dataContext)
rxClose(dataContext)
dataOut
summary(data)
require(plyr)
names <- adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1
names
# Not all data sources work, limited types of data supported.
dataContextBroken <- RxSqlServerData(table="Person.Person", connectionString = connectionStr, rowsPerRead = 20000)
rxOpen(dataContextBroken)
sqlCompute <- RxInSqlServer(connectionString = connectionStr, wait = TRUE , consoleOutput = TRUE,
traceEnabled = TRUE, traceLevel = 7)
rxSetComputeContext(sqlCompute)
summaryOfVSales <- rxSummary(formula=~.,data = dataContext)
summaryOfVSales
rxSetComputeContext("local")
summaryOfVSalesLocal <- rxSummary(formula=~., data=data)
rxSetComputeContext("local")
summaryOfVSalesLocal <- rxSummary(formula=~., data=dataOut)
summaryOfVSalesLocal
instance_name <- ".";
database_name <- "AdventureWorks2016";
myConnString <- paste("Server=",instance_name, ";Database=",database_name,";Trusted_Connection=true;",sep="");
# Set other variables used to define the compute context
sqlWait = TRUE;
sqlConsoleOutput = TRUE;
# Read from a table
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = myConnString, rowsPerRead = 20000)
rxOpen(dataContext)
data <- rxReadNext(dataContext)
rxClose(dataContext)
data
view(data)
View(data)
install.packages(plyr)
install.packages("plyr")
install.packages("plyr")
paste(adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep='' '') })$V1, collapse='', '' )
paste(adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1, collapse=', ' )
as.data.frame(paste(adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1, collapse=', ' ))
paste(adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1, collapse=', ' )
paste(adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1, collapse=', ' )$[1]
paste(adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1, collapse=', ' )[1]
as.data.frame(paste(adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1, collapse=', ' )[1])
paste(adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1, collapse=', ' )
paste(adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1, collapse=', ' )[1]
paste(adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1, collapse=', ' )[0]
paste(adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1, collapse=', ' )[2]
paste(adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1, collapse=', ' )[1]
data.frame(paste(adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1, collapse=', ' )[1])
clear
clear()
connectionStr <- "Server=localhost;Initial Catalog=AdventureWorks2016;UID=rUser;Pwd=test"
# Read from SQL Server tables
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = connectionStr, rowsPerRead = 20000)
# Debug: rxGetVarInfo(data=dataContext)
# Open the source, read into data.
rxOpen(dataContext)
dataOut <- rxReadNext(dataContext)
rxClose(dataContext)
# Show some data
summary(data)
require(plyr)
names <- adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1
summary(dataOut)
require(plyr)
names <- adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1
names
connectionStr <- "Server=localhost;Initial Catalog=AdventureWorks2016;UID=rUser;Pwd=test"
# Read from SQL Server tables
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = connectionStr, rowsPerRead = 20000)
# Debug: rxGetVarInfo(data=dataContext)
dataContext
rxOpen(dataContext)
dataOut <- rxReadNext(dataContext)
rxClose(dataContext)
View(dataOut)
# Not all data sources work, limited types of data supported.
dataContextBroken <- RxSqlServerData(table="Person.Person", connectionString = connectionStr, rowsPerRead = 20000)
rxOpen(dataContextBroken)
summary(dataOut)
require(plyr)
names <- adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1
names
sqlCompute <- RxInSqlServer(connectionString = connectionStr, wait = TRUE , consoleOutput = TRUE,
traceEnabled = TRUE, traceLevel = 7)
sqlCompute
rxSetComputeContext(sqlCompute)
summaryOfVSales <- rxSummary(formula=~.,data = dataContext)
summaryOfVSales
sqlCompute <- RxInSqlServer(connectionString = connectionStr, wait = TRUE , consoleOutput = TRUE,
traceEnabled = TRUE, traceLevel = 7)
rxSetComputeContext(sqlCompute)
summaryOfVSales <- rxSummary(formula=~.1/0,data = dataContext)
rxSetComputeContext("local")
summaryOfVSalesLocal <- rxSummary(formula=~., data=dataOut)
instance_name <- ".";
database_name <- "AdventureWorks2016";
myConnString <- paste("Server=",instance_name, ";Database=",database_name,";Trusted_Connection=true;",sep="");
# Set other variables used to define the compute context
sqlWait = TRUE;
sqlConsoleOutput = TRUE;
# Read from a table
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = myConnString, rowsPerRead = 20000)
rxOpen(dataContext)
data <- rxReadNext(dataContext)
rxClose(dataContext)
data
dataContext2 <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = myConnString, rowsPerRead = 20000)
rxOpen(dataContext2)
data <- rxReadNext(dataContext2)
rxClose(dataContext2)
names
connectionStr <- "Server=localhost;Initial Catalog=AdventureWorks2016;UID=rUser;Pwd=test"
# Read from SQL Server tables
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = connectionStr, rowsPerRead = 20000)
# Debug: rxGetVarInfo(data=dataContext)
# Open the source, read into data.
rxOpen(dataContext)
dataOut <- rxReadNext(dataContext)
rxClose(dataContext)
install.packages("ggplot2")
instance_name <- ".";
database_name <- "AdventureWorks2016";
myConnString <- paste("Server=",instance_name, ";Database=",database_name,";Trusted_Connection=true;",sep="");
# Set other variables used to define the compute context
sqlWait = TRUE;
sqlConsoleOutput = TRUE;
# Read from a table
dataContext2 <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = myConnString, rowsPerRead = 20000)
rxOpen(dataContext2)
data <- rxReadNext(dataContext2)
rxClose(dataContext2)
# Create the compute context
cc <-RxInSqlServer
summary(data)
data
connectionStr <- "Server=localhost;Initial Catalog=AdventureWorks2016;UID=rUser;Pwd=test"
# Read from SQL Server tables
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = connectionStr, rowsPerRead = 20000)
# Debug: rxGetVarInfo(data=dataContext)
# Open the source, read into data.
rxOpen(dataContext)
dataOut <- rxReadNext(dataContext)
rxClose(dataContext)
View(dataOut)
summary(dataOut)
require(plyr)
names <- adply(dataOut, 1, function(x) { paste(x$FirstName, x$LastName, sep=' ') })$V1
names
writer <- RxSqlServerData(connectionString = connectionStr, table="SimpleUserList", rowsPerRead=20000)
rxDataStep(inData=names, writer, overwrite=TRUE)
instance_name <- ".";
database_name <- "AdventureWorks2016";
myConnString <- paste("Server=",instance_name, ";Database=",database_name,";Trusted_Connection=true;",sep="");
# Set other variables used to define the compute context
sqlWait = TRUE;
sqlConsoleOutput = TRUE;
# Read from a table
dataContext2 <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = myConnString, rowsPerRead = 20000)
rxOpen(dataContext2)
data <- rxReadNext(dataContext2)
rxClose(dataContext2)
sqlCompute <- RxInSqlServer(connectionString = connectionStr, wait = TRUE , consoleOutput = TRUE,
traceEnabled = TRUE, traceLevel = 7)
rxSetComputeContext(sqlCompute)
summaryOfVSales <- rxSummary(formula=~.,data = dataContext)
# Sets it back locally
rxSetComputeContext("local")
summaryOfVSalesLocal <- rxSummary(formula=~., data=dataOut)
summaryOfVSalesLocal
sqlCompute <- RxInSqlServer(connectionString = connectionStr, wait = TRUE , consoleOutput = TRUE,
traceEnabled = TRUE, traceLevel = 7)
rxSetComputeContext(sqlCompute)
summaryOfVSales <- rxSummary(formula=~.,data = dataContext)
# Sets it back locally
rxSetComputeContext("local")
summaryOfVSalesLocal <- rxSummary(formula=~., data=dataOut)
install.packages("RODBC")
install.packages("ggplot2")
install.packages("rattle")
rattle()
library(rattle)
connectionStr <- "driver={SQL Server};server=localhost;Database=AdventureWorks2016;trusted_connection=true"
connectionStr <- "driver={SQL Server};server=localhost;Database=AdventureWorks2016;trusted_connection=true"
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = connectionStr, rowsPerRead = 20000)
sqlCompute <- RxInSqlServer(connectionString = connectionStr, wait = TRUE , consoleOutput = TRUE,
traceEnabled = TRUE, traceLevel = 7)
rxSetComputeContext(sqlCompute)
summaryOfVSales <- rxSummary(formula=~.,data = dataContext)
connectionStr <- "server=localhost;Database=AdventureWorks;trusted_connection=true"
sqlCompute <- RxInSqlServer(connectionString = connectionStr, wait = TRUE , consoleOutput = TRUE,
traceEnabled = TRUE, traceLevel = 7)
rxSetComputeContext(sqlCompute)
summaryOfVSales <- rxSummary(formula=~.,data = dataContext)
connectionStr <- "Server=localhost;Initial Catalog=AdventureWorks;UID=rUser;Pwd=test"
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = connectionStr, rowsPerRead = 20000)
sqlCompute <- RxInSqlServer(connectionString = connectionStr, wait = TRUE , consoleOutput = TRUE,
traceEnabled = TRUE, traceLevel = 7)
rxSetComputeContext(sqlCompute)
summaryOfVSales <- rxSummary(formula=~.,data = dataContext)
connectionStr <- "server=localhost;Database=AdventureWorks;trusted_connection=true"
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = connectionStr, rowsPerRead = 20000)
rxOpen(dataContext)
dataOut <- rxReadNext(dataContext)
rxClose(dataContext)
rxGetVarInfo(data=dataContext)
connectionStr <- "Driver={SQL Server Native Client 11.0};Server=localhost;Database=AdventureWorks;trusted_connection=true"
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = connectionStr, rowsPerRead = 20000)
# Debug: rxGetVarInfo(data=dataContext)
rxGetVarInfo(data=dataContext)
connectionStr <- "Driver={SQL Server Native Client 11.0};Server=localhost;Database=AdventureWorks;trusted_connection=yes"
dataContext <- RxSqlServerData(table="Sales.vSalesPerson", connectionString = connectionStr, rowsPerRead = 20000)
# Debug: rxGetVarInfo(data=dataContext)
rxGetVarInfo(data=dataContext)
sqlCompute <- RxInSqlServer(connectionString = connectionStr, wait = TRUE , consoleOutput = TRUE,
traceEnabled = TRUE, traceLevel = 7)
rxSetComputeContext(sqlCompute)
summaryOfVSales <- rxSummary(formula=~.,data = dataContext)
rxSetComputeContext("local")
summaryOfVSalesLocal <- rxSummary(formula=~., data=dataOut)
rxOpen(dataContext)
dataOut <- rxReadNext(dataContext)
rxClose(dataContext)
rxSetComputeContext("local")
summaryOfVSalesLocal <- rxSummary(formula=~., data=dataOut)
summaryOfVSales
summaryOfVSales
summaryOfVSalesLocal
rxGetVarInfo(data=dataContext)
